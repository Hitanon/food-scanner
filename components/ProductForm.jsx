import React, { useState, useEffect } from 'react';
import { View, Text, TextInput, Alert } from 'react-native';
import CustomButton from './CustomButton';
import { v4 as uuidv4 } from 'uuid';

const ProductForm = ({ mode = 'create', initialProduct = null, onSubmit }) => {
  const [name, setName] = useState('');
  const [calories, setCalories] = useState('');
  const [proteins, setProteins] = useState('');
  const [fats, setFats] = useState('');
  const [carbs, setCarbs] = useState('');
  const [weight, setWeight] = useState('');
  const [adjustedValues, setAdjustedValues] = useState({ calories: 0, proteins: 0, fats: 0, carbs: 0 });

  useEffect(() => {
    if (mode === 'edit' && initialProduct) {
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ –∫ "–Ω–∞ 100 –≥—Ä–∞–º–º–æ–≤"
      const factor = initialProduct.weight / 100;
      setName(initialProduct.name);
      setCalories((initialProduct.calories / factor).toFixed(2));
      setProteins((initialProduct.proteins / factor).toFixed(2));
      setFats((initialProduct.fats / factor).toFixed(2));
      setCarbs((initialProduct.carbs / factor).toFixed(2));
      setWeight(String(initialProduct.weight));
    }
  }, [mode, initialProduct]);

  useEffect(() => {
    // –ü–µ—Ä–µ—Å—á–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–µ—Å–∞
    recalculateAdjustedValues();
  }, [calories, proteins, fats, carbs, weight]);

  const recalculateAdjustedValues = () => {
    const multiplier = parseFloat(weight) / 100 || 0;
    setAdjustedValues({
      calories: parseFloat(calories) * multiplier || 0,
      proteins: parseFloat(proteins) * multiplier || 0,
      fats: parseFloat(fats) * multiplier || 0,
      carbs: parseFloat(carbs) * multiplier || 0,
    });
  };

  const handleSave = () => {
    if (!name || !calories || !proteins || !fats || !carbs || !weight) {
      Alert.alert('–û—à–∏–±–∫–∞', '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è.');
      return;
    }

    const productData = {
      id: initialProduct?.id || uuidv4(),
      name,
      calories: adjustedValues.calories,
      proteins: adjustedValues.proteins,
      fats: adjustedValues.fats,
      carbs: adjustedValues.carbs,
      weight: parseFloat(weight),
      image: initialProduct?.image || 'https://via.placeholder.com/150', // –ü—Ä–∏–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    };

    onSubmit(productData);
  };

  return (
    <View>
      <View className="mb-5">
        <Text className="text-base text-gray-700 mb-2">–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞</Text>
        <TextInput
          className="bg-white p-3 rounded-lg text-base"
          placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ"
          value={name}
          onChangeText={setName}
        />
      </View>

      <Text className="text-sm text-gray-600 mb-2">–í–≤–µ–¥–∏—Ç–µ –¥–ª—è 100–≥—Ä –ø—Ä–æ–¥—É–∫—Ç–∞:</Text>

      <View className="mb-5">
        <Text className="text-base text-gray-700 mb-2">üî• –∫–∫–∞–ª</Text>
        <TextInput
          className="bg-white p-3 rounded-lg text-base"
          placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–∞–ª–æ—Ä–∏–∏"
          keyboardType="numeric"
          value={calories}
          onChangeText={setCalories}
        />
      </View>

      <View className="mb-5">
        <Text className="text-base text-green-700 mb-2">–ë–µ–ª–∫–∏</Text>
        <TextInput
          className="bg-white p-3 rounded-lg text-base"
          placeholder="–í–≤–µ–¥–∏—Ç–µ –±–µ–ª–∫–∏"
          keyboardType="numeric"
          value={proteins}
          onChangeText={setProteins}
        />
      </View>

      <View className="mb-5">
        <Text className="text-base text-orange-700 mb-2">–ñ–∏—Ä—ã</Text>
        <TextInput
          className="bg-white p-3 rounded-lg text-base"
          placeholder="–í–≤–µ–¥–∏—Ç–µ –∂–∏—Ä—ã"
          keyboardType="numeric"
          value={fats}
          onChangeText={setFats}
        />
      </View>

      <View className="mb-5">
        <Text className="text-base text-blue-700 mb-2">–£–≥–ª–µ–≤–æ–¥—ã</Text>
        <TextInput
          className="bg-white p-3 rounded-lg text-base"
          placeholder="–í–≤–µ–¥–∏—Ç–µ —É–≥–ª–µ–≤–æ–¥—ã"
          keyboardType="numeric"
          value={carbs}
          onChangeText={setCarbs}
        />
      </View>

      <View className="mb-5">
        <Text className="text-base text-gray-700 mb-2">–í–µ—Å (–≥—Ä.)</Text>
        <TextInput
          className="bg-white p-3 rounded-lg text-base"
          placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å"
          keyboardType="numeric"
          value={weight}
          onChangeText={setWeight}
        />
      </View>

      {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π */}
      <View className="my-5">
        <Text className="text-base text-gray-700">–ù–∞ –≤–µ—Å: {weight}</Text>
        <Text className="text-base text-gray-700">–ö–∞–ª–æ—Ä–∏–∏ üî•: {adjustedValues.calories.toFixed(2)}</Text>
        <Text className="text-base text-gray-700">–ë–µ–ª–∫–∏: {adjustedValues.proteins.toFixed(2)}</Text>
        <Text className="text-base text-gray-700">–ñ–∏—Ä—ã: {adjustedValues.fats.toFixed(2)}</Text>
        <Text className="text-base text-gray-700">–£–≥–ª–µ–≤–æ–¥—ã: {adjustedValues.carbs.toFixed(2)}</Text>
      </View>

      <CustomButton
        title={mode === 'edit' ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è' : '–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç'}
        handlePress={handleSave}
        containerStyles="bg-primary my-2 w-full"
        textStyles="text-white font-medium"
      />
    </View>
  );
};

export default ProductForm;
